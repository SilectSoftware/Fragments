<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<!--
%%
Description:
  A rule that runs a PowerShell script on a timer with examples for sending parameters to the script
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your app with NO SPACES OR SPECIAL CHARACTERS ALLOWED 
  ClassID - is the targeted class such as your custom class or Windows!Microsoft.Windows.Server.OperatingSystem
  UniqueID - Is a unique short description of the workflow purpose (NO SPACES OR SPECIAL CHARACTERS ALLOWED) such as "MonitorFilesInFolder"  

Version: 1.4
LastModified: 4-Nov-2017
%%

In this fragment you need to replace:
  ##CompanyID##
  ##AppName##
  ##ClassID##
  ##UniqueID##
  
This fragment depends on references:
  RequiredReference: Alias="System", ID="System.Library"
  RequiredReference: Alias="Windows", ID="Microsoft.Windows.Library"

@@Author=Kevin Holman@@  
--> 
  <Monitoring>
    <Rules>
      <Rule ID="##CompanyID##.##AppName##.##UniqueID##.TimedPowerShell.Rule" Enabled="true" Target="##ClassID##" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Custom</Category>
        <DataSources>
          <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
            <Scheduler>
              <SimpleReccuringSchedule>
                <Interval Unit="Seconds">3600</Interval>
				<SyncTime></SyncTime>
              </SimpleReccuringSchedule>
              <ExcludeDates />
            </Scheduler>
          </DataSource>		  
        </DataSources>
        <WriteActions>
          <WriteAction ID="WA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
            <ScriptName>##CompanyID##.##AppName##.##UniqueID##.TimedPowerShell.Rule.ps1</ScriptName>
            <ScriptBody>
#=================================================================================
#  Describe Script Here
#
#  Author: 
#  v1.0
#=================================================================================
param($ComputerName,$MGName,$YourStaticParam)


# Manual Testing section - put stuff here for manually testing script - typically parameters:
#=================================================================================
# $ComputerName = "computername.domain.com"
# $MGName = "foo"
# $YourStaticParam = "bar"
#=================================================================================


# Constants section - modify stuff here:
#=================================================================================
# Assign script name variable for use in event logging.  
# ScriptName should be the same as the ID of the module that the script is contained in
$ScriptName = "##CompanyID##.##AppName##.##UniqueID##.TimedPowerShell.Rule.ps1"
$EventID = "1234"
#=================================================================================


# Starting Script section - All scripts get this
#=================================================================================
# Gather the start time of the script
$StartTime = Get-Date
#Set variable to be used in logging events
$whoami = whoami
# Load MOMScript API
$momapi = New-Object -comObject MOM.ScriptAPI
#Log script event that we are starting task
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script is starting. `n Running as ($whoami).")
#=================================================================================


# Begin MAIN script section
#=================================================================================
# Log an event for the Params			  
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n These are the parameters passed from script: `n ComputerName: ($ComputerName). `n ManagementGroup Name: ($MGName) `n YourStaticParam: ($YourStaticParam).")
#=================================================================================
# End MAIN script section


# End of script section
#=================================================================================
#Log an event for script ending and total execution time.
$EndTime = Get-Date
$ScriptTime = ($EndTime - $StartTime).TotalSeconds
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")
#=================================================================================
# End of script
            </ScriptBody>
            <Parameters>
              <Parameter>
                <Name>ComputerName</Name>
                <Value>$Target/Host/Property[Type='Windows!Microsoft.Windows.Computer']/PrincipalName$</Value>
              </Parameter>
			  <Parameter>
                <Name>MGName</Name>
                <Value>$Target/ManagementGroup/Name$</Value>
              </Parameter>
			  <Parameter>
                <Name>YourStaticParam</Name>
                <Value>YourStaticValue</Value>
              </Parameter>			  
            </Parameters>
            <TimeoutSeconds>120</TimeoutSeconds>
          </WriteAction>
        </WriteActions>
      </Rule>
    </Rules>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.TimedPowerShell.Rule">
          <Name>##CompanyID## ##AppName## ##UniqueID## TimedPowerShell Rule</Name>
          <Description />
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks> 
</ManagementPackFragment>
