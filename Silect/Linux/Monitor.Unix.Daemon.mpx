<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--
%%
Description:
  A MONITOR to verify that a Daemon is running based on output of a shell command
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your app with NO SPACES OR SPECIAL CHARACTERS ALLOWED  
  ClassID - is the targeted class; this fragment does not define its own
  UniqueID - Is a unique short description of the monitor purpose (NO SPACES OR SPECIAL CHARACTERS ALLOWED) such as "DaemonMonitor"
  DaemonName - The name of the daemon to look for, as it would appear in the output for "ps -ef"

Version: 1.0
LastModified: 15-May-2019
%%

In this fragment you need to replace:
  ##CompanyID##
  ##AppName##
  ##ClassID##
  ##UniqueID##  
  ##DaemonName##

This fragment depends on references:
  RequiredReference: Alias="Health", ID="System.Health.Library"
  RequiredReference: Alias="Unix", ID="Microsoft.Unix.Library"
  RequiredReference: Alias="UnixShell", ID="Microsoft.Unix.ShellCommand.Library"

@@Author=Silect Software, Inc.@@  
-->
  <Monitoring>
    <Monitors>
      <UnitMonitor ID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor" Accessibility="Public" Enabled="true" Target="##ClassID##" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="UnixShell!Microsoft.Unix.ShellCommand.TwoState.MonitorType" ConfirmDelivery="false">
        <Category>Custom</Category>
        <AlertSettings AlertMessage="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/PrincipalName$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="StatusOK" MonitorTypeStateID="StatusOK" HealthState="Success" />
          <OperationalState ID="StatusError" MonitorTypeStateID="StatusError" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <Interval>60</Interval>
          <SyncTime />
          <TargetSystem>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/NetworkName$</TargetSystem>
          <UserName>$RunAs[Name="Unix!Microsoft.Unix.ActionAccount"]/UserName$</UserName>
          <Password>$RunAs[Name="Unix!Microsoft.Unix.ActionAccount"]/Password$</Password>
          <ShellCommand>ps -ef | grep -v grep | grep -cw ##DaemonName##</ShellCommand>
          <TimeOut>900</TimeOut>
          <TimeOutInMS>120000</TimeOutInMS>
          <HealthyExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="Integer">//*[local-name()="StdOut"]</XPathQuery>
              </ValueExpression>
              <Operator>Greater</Operator>
              <ValueExpression>
                <Value Type="Integer">0</Value>
              </ValueExpression>
            </SimpleExpression>
          </HealthyExpression>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="Integer">//*[local-name()="StdOut"]</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="Integer">0</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU">
      <DisplayStrings>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor">
          <Name>##CompanyID## ##AppName## Unix Daemon Monitor</Name>
          <Description>Monitor a Linux/Unix daemon running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor" SubElementID="StatusError">
          <Name>StatusError</Name>
          <Description>The Linux/Unix daemon is not running or its state could not be confirmed.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor" SubElementID="StatusOK">
          <Name>StatusOK</Name>
          <Description>The Linux/Unix daemon has been confirmed to be running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.##UniqueID##.Unix.ShellCommand.Monitor.AlertMessage">
          <Name>##CompanyID## ##AppName## Unix Daemon Monitor Alert</Name>
          <Description>The daemon ##DaemonName## couldn't be found on {0}</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>