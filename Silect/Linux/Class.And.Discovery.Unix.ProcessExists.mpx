<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--
%%
Description:
  A CLASS and DISCOVERY for a Unix/Linux application based on existence of a process
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your application with NO SPACES OR SPECIAL CHARACTERS ALLOWED  
  ProcessName - is the name of the process to look for, such as "httpd", "cron", "firewalld", etc
Version: 1.0
LastModified: 07-May-2019
%%

In this fragment you need to replace:
  ##CompanyID##
  ##AppName##
  ##LinuxProcName##

This fragment depends on references:
  RequiredReference: Alias="System", ID="System.Library"
  RequiredReference: Alias="Unix", ID="Microsoft.Unix.Library"
  RequiredReference: Alias="WSM", ID="Microsoft.SystemCenter.WSManagement.Library"	
  
@@Author=Silect Software, Inc.@@
@@Workflow=Unix Process Discovery@@
-->
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="##CompanyID##.##AppName##.Unix.Class" Accessibility="Public" Abstract="false" Base="Unix!Microsoft.Unix.LocalApplication" Hosted="true" Singleton="false">
          <Property ID="AppName" Type="string" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" />
        </ClassType>
      </ClassTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="##CompanyID##.##AppName##.Unix.Class.Discovery.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="TargetSystem" type="xsd:string" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" />
          <xsd:element minOccurs="1" name="ProcName" type="xsd:string" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="ProcName" Selector="$Config/ProcName$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="##CompanyID##.##AppName##.Unix.Class.Discovery.Shell.DS">
                <TargetSystem>$Config/TargetSystem$</TargetSystem>
                <ShellCommand>ps -C $Config/ProcName$ -o pid= | wc -l</ShellCommand>
                <TimeoutSeconds>120</TimeoutSeconds>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              </DataSource>
              <ConditionDetection ID="Mapper" TypeID="System!System.Discovery.FilteredClassSnapshotDataMapper">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="Integer">//*[local-name()="StdOut"]</XPathQuery>
                    </ValueExpression>
                    <Operator>NotEqual</Operator>
                    <ValueExpression>
                      <Value Type="Integer">0</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <ClassId>$MPElement[Name='##CompanyID##.##AppName##.Unix.Class']$</ClassId>
                <InstanceSettings>
                  <Settings>
                    <Setting>
                      <Name>$MPElement[Name='##CompanyID##.##AppName##.Unix.Class']/AppName$</Name>
                      <Value>##AppName##</Value>
                    </Setting>
                    <Setting>
                      <Name>$MPElement[Name='System!System.Entity']/DisplayName$</Name>
                      <Value>$Config/TargetSystem$</Value>
                    </Setting>
                    <Setting>
                      <Name>$MPElement[Name='Unix!Microsoft.Unix.Computer']/PrincipalName$</Name>
                      <Value>$Config/TargetSystem$</Value>
                    </Setting>
                  </Settings>
                </InstanceSettings>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="DS" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="##CompanyID##.##AppName##.Unix.Class.Discovery.Shell.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="TargetSystem" type="xsd:string" />
          <xsd:element minOccurs="1" name="ShellCommand" type="xsd:string" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="System!System.Discovery.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="##CompanyID##.##AppName##.Unix.ShellCommand.PA">
                <TargetSystem>$Config/TargetSystem$</TargetSystem>
                <ShellCommand>$Config/ShellCommand$</ShellCommand>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="DS" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>WSM!Microsoft.SystemCenter.WSManagement.WSManData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="##CompanyID##.##AppName##.Unix.ShellCommand.PA" Accessibility="Public" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element minOccurs="1" name="TargetSystem" type="xsd:string" />
          <xsd:element minOccurs="1" name="ShellCommand" type="xsd:string" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TargetSystem" Selector="$Config/TargetSystem$" ParameterType="string" />
          <OverrideableParameter ID="ShellCommand" Selector="$Config/ShellCommand$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="Probe" TypeID="Unix!Microsoft.Unix.WSMan.Invoke.ProbeAction">
                <TargetSystem>$Config/TargetSystem$</TargetSystem>
                <Uri>http://schemas.microsoft.com/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem?__cimnamespace=root/scx</Uri>
                <Selector />
                <InvokeAction>ExecuteShellCommand</InvokeAction>
                <Input><![CDATA[
<p:ExecuteShellCommand_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem">
<p:command>$Config/ShellCommand$</p:command>
<p:timeout>$Config/TimeoutSeconds$</p:timeout>
</p:ExecuteShellCommand_INPUT>
]]></Input>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>WSM!Microsoft.SystemCenter.WSManagement.WSManData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="##CompanyID##.##AppName##.Unix.Class.Discovery" Enabled="true" Target="Unix!Microsoft.Unix.Computer" ConfirmDelivery="true" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="##CompanyID##.##AppName##.Unix.Class" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="##CompanyID##.##AppName##.Unix.Class.Discovery.DS">
          <TargetSystem>$Target/Property[Type="Unix!Microsoft.Unix.Computer"]/PrincipalName$</TargetSystem>
          <IntervalSeconds>14400</IntervalSeconds>
          <ProcName>##LinuxProcName##</ProcName>
        </DataSource>
      </Discovery>
    </Discoveries>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU">
      <DisplayStrings>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class">
          <Name>##CompanyID## ##AppName## Unix Class</Name>
          <Description>Unix class discovered by the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class" SubElementID="AppName">
          <Name>Application Name</Name>
          <Description>Name of the application (##AppName##) process running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery">
          <Name>##CompanyID## ##AppName## Unix Discovery</Name>
          <Description>Discovery for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery.DS">
          <Name>##CompanyID## ##AppName## Unix Discovery data source</Name>
          <Description>Discovery data source for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery.DS" SubElementID="IntervalSeconds">
          <Name>##CompanyID## ##AppName## Unix Discovery data source interval, in seconds</Name>
          <Description>Discovery data source interval, in seconds, for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery.DS" SubElementID="ProcName">
          <Name>##CompanyID## ##AppName## Unix Discovery data source process name</Name>
          <Description>Discovery data source process name for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery.Shell.DS">
          <Name>##CompanyID## ##AppName## Unix Discovery shell data source</Name>
          <Description>Discovery data source shell data source for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.Class.Discovery.Shell.DS" SubElementID="IntervalSeconds">
          <Name>##CompanyID## ##AppName## Unix Discovery shell data source interval, in seconds</Name>
          <Description>Discovery data source shell data source internal, in seconds, for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.ShellCommand.PA">
          <Name>##CompanyID## ##AppName## Unix Discovery shell command probe action</Name>
          <Description>Discovery shell command probe action for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.ShellCommand.PA" SubElementID="ShellCommand">
          <Name>##CompanyID## ##AppName## Unix Discovery shell command probe action shell command</Name>
          <Description>Discovery shell command probe action shell command for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.ShellCommand.PA" SubElementID="TargetSystem">
          <Name>##CompanyID## ##AppName## Unix Discovery shell command probe action target system</Name>
          <Description>Discovery shell command probe action target system for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
        <DisplayString ElementID="##CompanyID##.##AppName##.Unix.ShellCommand.PA" SubElementID="TimeoutSeconds">
          <Name>##CompanyID## ##AppName## Unix Discovery shell command probe action timeout value, in seconds</Name>
          <Description>Discovery shell command probe action timeout value, in seconds, for Unix class based on the existence of process ##AppName## running on the target system.</Description>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>